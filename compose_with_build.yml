services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - pipeline_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  python_app:
    build: ./python_app
    container_name: python_app
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    volumes:
      - ./python_app:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pipeline_net

  superset:
    build: ./superset_init
    container_name: superset
    user: root
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8088:8088"
    volumes:
      - ./superset_init:/app/superset_init
    entrypoint: ["/bin/bash", "/app/superset_init/superset_init.sh"]
    depends_on:
      - python_app
    networks:
      - pipeline_net

volumes:
  postgres_data:
  superset_home:

networks:
  pipeline_net:
